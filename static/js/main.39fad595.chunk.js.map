{"version":3,"sources":["components/UI/Header/Header.module.css","containers/ReadingProgress/ReadingProgress.module.css","containers/Layout/Layout.module.css","images/Header.jpg","components/UI/SideDrawer/SideDrawer.module.css","images/envelope-solid.svg","containers/ReadingProgress/ReadingProgress.js","containers/Layout/Layout.js","components/UI/Modal.js","components/UI/SideDrawer/SideDrawer.js","components/UI/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ReadingProgress","target","useState","readingProgress","setReadingProgress","scrollListener","current","console","log","element","totalHeight","clientHeight","offsetTop","window","innerHeight","windowScrollTop","pageYOffset","useEffect","addEventListener","removeEventListener","className","classes","reading_progress_bar","style","width","Layout","state","sideDrawer","toggleDrawer","set","setState","prevState","this","props","children","Component","Transition","React","forwardRef","ref","Slide","direction","AlertDialogSlide","open","setOpen","handleClose","onClick","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","color","useStyles","makeStyles","list","text","fullList","paper","background","SideDrawer","role","List","map","index","ListItem","button","key","ListItemIcon","ListItemText","root","primary","Divider","Fragment","classess","Menu","Drawer","anchor","theme","margin","spacing","title","fontSize","Header","backgroundImage","headerBackground","Logo","Card","border","variant","CardContent","Typography","MailLogo","src","mailLOGO","alt","onSubmit","e","preventDefault","noValidate","TextField","marginBottom","label","type","display","createRef","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.39fad595.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3yweT\",\"MailLogo\":\"Header_MailLogo__qmpjO\",\"Logo\":\"Header_Logo__3B7Kj\",\"root\":\"Header_root__3vO_f\",\"title\":\"Header_title__mOpxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reading_progress_bar\":\"ReadingProgress_reading_progress_bar__bgU6W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__37MHr\"};","module.exports = __webpack_public_path__ + \"static/media/Header.0afc1251.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"SideDrawer_Menu__3MVJk\"};","module.exports = __webpack_public_path__ + \"static/media/envelope-solid.82189696.svg\";","import React ,{useState,useEffect}from 'react'\nimport classes from './ReadingProgress.module.css'\n\nconst ReadingProgress = ({ target }) => {\n  const [readingProgress, setReadingProgress] = useState(0);\n  const scrollListener = () => {\n    if (!target.current) {\n      return;\n    }\n    console.log(target);\n\n    const element         = target.current;\n    const totalHeight     = element.clientHeight - element.offsetTop - (window.innerHeight);\n    const windowScrollTop =  window.pageYOffset || 0;\n    if (windowScrollTop === 0) {\n      return setReadingProgress(0);\n    }\n\n    if (windowScrollTop > totalHeight) {\n      return setReadingProgress(100);\n    }\n\n    setReadingProgress((windowScrollTop / totalHeight) * 100);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollListener);\n    return () => window.removeEventListener(\"scroll\", scrollListener);\n  });\n\n  return <div className={classes.reading_progress_bar} style={{width: `${readingProgress}%`}} />;\n};\n\nexport default ReadingProgress\n","import React , { Component , Fragment } from 'react'\nimport classes from './Layout.module.css'\n\n\n\nclass Layout extends Component {\n  state={\n    sideDrawer:false\n  }\n\ntoggleDrawer = () => {\n    this.set.setState(prevState=>{\n      return{sideDrawer:!prevState.sideDrawer}\n    });\n  };\n  render(){\n    return(\n    <Fragment>\n        <div className={classes.Layout}>\n          {this.props.children}\n        </div>\n\n    </Fragment>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <p onClick={handleClickOpen}>\n        SUBMIT\n      </p>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Submitted\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n          Submitted. Check Your EmailId!\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Back\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport classess from './SideDrawer.module.css'\n\nconst useStyles = makeStyles({\n\n  list: {\n    width: 250,\n  },\n  text:{\n    color:'white'\n  },\n  fullList: {\n    width: 'auto',\n  },\n  paper: {\n  background: \"#333333\"\n}\n});\n\nconst SideDrawer=()=> {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  const list = (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer}\n    >\n      <List>\n        {['Home', 'Latest News', 'AboutUs', 'Contact Us'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText classes={{ root: classes.text }} primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['UnBunked', 'Team Anonymous'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n        <React.Fragment>\n        <div className={classess.Menu}>\n          <Button onClick={toggleDrawer}><MenuIcon /></Button>\n        </div>\n          <Drawer classes={{ paper: classes.paper }} anchor='right' open={open} onClose={toggleDrawer}>\n            {list}\n          </Drawer>\n        </React.Fragment>\n  );\n}\n\nexport default SideDrawer\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport classes from './Header.module.css'\nimport SubmitModal from '../Modal'\nimport headerBackground from '../../../images/Header.jpg'\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport SideDrawer from '../SideDrawer/SideDrawer'\nimport mailLOGO from '../../../images/envelope-solid.svg'\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '45ch',\n  },\n  },\n  title: {\n    fontSize: 34,\n  }\n}));\nconst Header = (props)=>{\n  const classess = useStyles();\n  const submitHandler = (e) =>{\n   e.preventDefault()\n   console.log('submitted');\n }\n  return(\n    <header className={classes.Header} style={{backgroundImage: `url(${headerBackground}) `}}>\n      <div className={classes.Logo}>\n        <p>Logo</p>\n      </div>\n      <SideDrawer />\n\n        <Card className={classes.root} border={1} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classess.title} >\n                  Join Us! Let's Move Forward\n                </Typography><img className={classes.MailLogo} src={mailLOGO} alt='mail-logo' />\n            </CardContent>\n            <CardContent>\n                <form  onSubmit={submitHandler} noValidate>\n                <TextField style={{width:'60%',marginBottom:'10px'}} id=\"filled-basic\" label=\"EmailID\" variant=\"filled\" />\n                <Button type='submit' style={{display:'block',width:'50%',margin:'auto'}}><SubmitModal /></Button>\n                </form>\n            </CardContent>\n        </Card>\n    </header>\n  )\n}\nexport default Header\n","import React , { Fragment }from 'react';\nimport './App.css';\n\nimport ReadProgress from './containers/ReadingProgress/ReadingProgress'\nimport Layout from './containers/Layout/Layout'\nimport Header from './components/UI/Header/Header'\n\nconst target = React.createRef();\n    // <ReadProgress target={target} />\nfunction App() {\n  return (\n  <Fragment>\n  <ReadProgress target={target} />\n      <div className=\"App\" ref={target}>\n        <Layout>\n          <Header />\n        </Layout>\n      </div>\n  </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}