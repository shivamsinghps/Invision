{"version":3,"sources":["App.module.css","components/UI/SideDrawer/SideDrawer.module.css","containers/ReadingProgress/ReadingProgress.module.css","containers/Layout/Layout.module.css","components/UI/SideDrawer/List/List.js","components/UI/SideDrawer/SideDrawer.js","store/actions/ui.js","store/actions/actionTypes.js","containers/ReadingProgress/ReadingProgress.js","containers/Layout/Layout.js","App.js","serviceWorker.js","store/reducers/ui.js","store/rootreducer.js","index.js"],"names":["module","exports","useStyles","makeStyles","text","color","SideList","props","classes","List","links","map","index","link","ListItem","button","key","ListItemIcon","to","exact","style","textDecoration","ListItemText","root","primary","theme","list","width","breakpoints","down","follow","marginLeft","position","bottom","padding","paper","background","connect","dispatch","OnsideClick","type","React","useState","open","setOpen","toggleDrawer","className","role","onClick","Divider","Fragment","classess","Menu","Button","Drawer","transitionDuration","anchor","onClose","Typography","variant","Facebook","fontSize","YouTube","Twitter","ReadingProgress","target","readingProgress","setReadingProgress","scrollListener","current","element","totalHeight","clientHeight","offsetTop","window","innerHeight","windowScrollTop","pageYOffset","useEffect","addEventListener","removeEventListener","reading_progress_bar","Layout","state","sideDrawer","set","setState","prevState","this","children","Component","Home","lazy","Blog","AboutUs","Contact","createRef","App","ref","fallback","Loader","path","component","Boolean","location","hostname","match","initialState","side","reducer","action","rootReducer","combineReducers","ui","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2214eced.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Loader\":\"App_Loader__12yUz\",\"load4\":\"App_load4__2bylw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"SideDrawer_Menu__3MVJk\",\"Lable\":\"SideDrawer_Lable__1zT5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reading_progress_bar\":\"ReadingProgress_reading_progress_bar__bgU6W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__37MHr\"};","import React from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {NavLink} from 'react-router-dom'\n\nconst useStyles = makeStyles({\n\n  text:{\n    color:'white'\n  }\n\n});\n\nconst SideList = (props) => {\n\nconst classes = useStyles();\n  return(\n    <List>\n      {props.links.map((text, index) => {\n        const link = \"/\"+text\n        return(\n        <ListItem button key={text}>\n          <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n         <NavLink to={link} exact style={{ textDecoration: 'none' }}><ListItemText classes={{ root: classes.text }} primary={text} />\n         </NavLink>\n        </ListItem>\n\n      )})}\n    </List>\n  )\n}\nexport default SideList\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Menu,Facebook,YouTube,Twitter} from '@material-ui/icons';\nimport {Divider,Button,Drawer,Typography} from '@material-ui/core';\nimport classess from './SideDrawer.module.css'\nimport SideList from './List/List'\nimport {connect} from 'react-redux'\nimport {side_toggle} from '../../../store/actions/ui'\n\nconst useStyles = makeStyles((theme) => ({\n\n  list: {\n    width: '23vw',\n    [theme.breakpoints.down('sm')]: {\n      width:'58vw',\n    },\n  },\n  follow:{\n    marginLeft:'5vw',\n    width:'150px',\n    position:'fixed',\n    bottom:'50px',\n    padding:'10px',\n  },\n  paper: {\n  background: \"#333333\"\n  }\n}));\n\nconst SideDrawer=(props)=> {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const primarylinks = ['Home','AboutUs','OurWork','Techs','Career','Contact']\n  const seclinks = ['UnBunked','TeamAnonymous']\n  const toggleDrawer = () => {\n    props.OnsideClick()\n    setOpen(!open);\n  };\n\n  const list = (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer}\n    >\n      <SideList links={primarylinks} />\n      <Divider />\n      <SideList links={seclinks} />\n    </div>\n  );\n\n  return (\n        <React.Fragment>\n          <div className={classess.Menu}>\n            <Button onClick={toggleDrawer}><Menu /></Button>\n          </div>\n          <Drawer transitionDuration={600}  classes={{ paper: classes.paper }} anchor='right'  open={open} onClose={toggleDrawer}>\n              {list}\n              <div className={classes.follow} >\n                <Typography variant='h6'>\n                  Follow Us On:\n                </Typography>\n                <Facebook fontSize='large'/>\n                <YouTube fontSize='large'/>\n                <Twitter fontSize='large'/>\n              </div>\n          </Drawer>\n        </React.Fragment>\n  );\n}\n\nconst mapDispatchToProps=dispatch=>{\n  return{\n    OnsideClick:()=> dispatch(side_toggle()),\n  }\n}\nexport default connect(null,mapDispatchToProps)(SideDrawer)\n","import * as actionTypes from './actionTypes'\n\n\nexport const side_toggle = () =>{\n\treturn {\n\t\ttype:actionTypes.SIDE_TOOGLE\n\t}\n}\n","//Authentication action identifiers\r\nexport const AUTH_START = 'AUTH_START'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_FAILURE = 'AUTH_FAILURE'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\nexport const AUTH_REDIRECT_PATH = 'AUTH_REDIRECT_PATH'\r\n\r\nexport const SIDE_TOOGLE = 'SIDE_TOOGLE'\r\n","import React ,{useState,useEffect}from 'react'\nimport classes from './ReadingProgress.module.css'\n\nconst ReadingProgress = ({ target }) => {\n  const [readingProgress, setReadingProgress] = useState(0);\n  const scrollListener = () => {\n    if (!target.current) {\n      return;\n    }\n    const element         = target.current;\n    const totalHeight     = element.clientHeight - element.offsetTop - (window.innerHeight);\n    const windowScrollTop =  window.pageYOffset || 0;\n    if (windowScrollTop === 0) {\n      return setReadingProgress(0);\n    }\n\n    if (windowScrollTop > totalHeight) {\n      return setReadingProgress(100);\n    }\n\n    setReadingProgress((windowScrollTop / totalHeight) * 100);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollListener);\n    return () => window.removeEventListener(\"scroll\", scrollListener);\n  });\n\n  return <div className={classes.reading_progress_bar} style={{width: `${readingProgress}%`}} />;\n};\n\nexport default ReadingProgress\n","import React , { Component , Fragment } from 'react'\nimport classes from './Layout.module.css'\n\n\n\nclass Layout extends Component {\n  state={\n    sideDrawer:false\n  }\n\ntoggleDrawer = () => {\n    this.set.setState(prevState=>{\n      return{sideDrawer:!prevState.sideDrawer}\n    });\n  };\n  render(){\n    return(\n    <Fragment>\n        <div className={classes.Layout}>\n          {this.props.children}\n        </div>\n\n    </Fragment>\n    )\n  }\n}\n\nexport default Layout\n","import React , { Fragment , Suspense , lazy }from 'react';\nimport classes from './App.module.css';\nimport { Route , Switch , Redirect } from 'react-router-dom'\nimport SideDrawer from './components/UI/SideDrawer/SideDrawer'\nimport ReadProgress from './containers/ReadingProgress/ReadingProgress'\nimport Layout from './containers/Layout/Layout'\nconst Home = lazy(() => import ('./containers/Home/Home'))\nconst Blog = lazy(()=> import('./containers/Blog/Blog'))\nconst AboutUs = lazy(()=> import('./components/AboutUs/AboutUs'))\nconst Contact = lazy(()=> import('./components/Contact/Contact'))\n\nconst target = React.createRef();\n\nfunction App() {\n  return (\n  <Fragment>\n  <ReadProgress target={target} />\n      <div className={classes.App} ref={target}>\n        <Layout>\n            <SideDrawer />\n              <Suspense fallback={<div className={classes.Loader}>Loading...</div>}>\n                <Switch>\n                  <Route path='/OurWork' exact component={Blog} />\n                  <Route path='/Contact' exact component={Contact} />\n                  <Route path='/AboutUs' exact component={AboutUs} />\n                  <Route path='/Home' exact component={Home} />\n                  <Route path='/' exact component={Home} />\n                  <Redirect to='/' />\n                </Switch>\n               </Suspense>\n        </Layout>\n      </div>\n  </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\n\nconst initialState ={\n  side:false,\n}\n\nconst reducer = (state=initialState , action )=>{\n\tswitch(action.type)\n\t{\n\t  case actionTypes.SIDE_TOOGLE:\n\t\treturn{\n\t\t\t...state,\n\t\t\tside:!state.side\n\t\t}\n\t\tdefault:\n\t\treturn state\n\t}\n}\n\nexport default reducer\n","import { combineReducers } from 'redux'\nimport ui from './reducers/ui'\n\nconst rootReducer = combineReducers({\n\tui: ui\n})\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\n// Redux\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {createStore , applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/rootreducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\nrootReducer,\ncomposeEnhancers(\napplyMiddleware(thunk))\n)\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}